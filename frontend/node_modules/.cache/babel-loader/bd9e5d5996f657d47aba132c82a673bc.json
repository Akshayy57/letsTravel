{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Travel\\\\frontend\\\\src\\\\components\\\\hotel-form-checking\\\\hotel-form-checking.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Button } from '@material-ui/core';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport { useForm } from 'react-hook-form';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\nimport { getCities, getHotels } from '../../api-service/api-service';\nimport { useHistory } from 'react-router-dom';\nimport ContextApi from '../../context-api/context-api';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst HotelFormChecking = () => {\n  var _errors$destinationBu, _errors$location, _errors$room, _errors$numberOfPeopl, _errors$checkIn, _errors$checkOut;\n\n  const {\n    dispatchUserEvent\n  } = useContext(ContextApi);\n  const history = useHistory();\n  const schema = yup.object({\n    destinationBudget: yup.number().typeError('Please enter valid budget').min(500, 'Min value 500'),\n    location: yup.string().required('Please select location'),\n    room: yup.string().required('Please select room'),\n    numberOfPeople: yup.number().typeError('Please enter number of people').required(),\n    checkIn: yup.string().typeError('Please select check-in date').required('Please select check-in date'),\n    checkOut: yup.string().typeError('Please select check-out date').required('Please select check-out date')\n  }).required();\n  const [selectedDate, setSelectedDate] = useState({\n    checkIn: null,\n    checkOut: null\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const [selectedValue, setSelectedValue] = useState({\n    location: [],\n    room: []\n  });\n  const [options, setOptions] = useState([]);\n  const roomOptions = [{\n    id: 0,\n    room: 'Family'\n  }, {\n    id: 1,\n    room: 'Couples'\n  }, {\n    id: 2,\n    room: 'Newly Married Couples'\n  }, {\n    id: 3,\n    room: 'Personal'\n  }]; // Getting Cities\n\n  const getAllCities = async () => {\n    let response = await getCities();\n\n    if (response.status === 200) {\n      setOptions(response.data);\n    } else {\n      setOptions([]);\n    }\n  };\n\n  const handleCountry = data => {\n    setSelectedValue({ ...selectedValue,\n      location: data\n    });\n  };\n\n  const handleDateChange = (dateCheck, date) => {\n    console.log(dateCheck, date);\n\n    if (dateCheck === 'checkIn') {\n      setSelectedDate({ ...selectedDate,\n        checkIn: date\n      });\n    } else {\n      setSelectedDate({ ...selectedDate,\n        checkOut: date\n      });\n    }\n  };\n\n  const [Formvalue, setFormValue] = useState(localStorage.getItem('hotelForm') || '');\n  useEffect(() => {\n    localStorage.setItem('hotelForm', Formvalue);\n  }, [Formvalue]); // Submiting Data\n\n  const onSubmit = async data => {\n    let payload = {\n      \"city\": data.location,\n      \"budget\": data.destinationBudget,\n      \"checkin\": data.checkIn,\n      \"checkout\": data.checkOut,\n      \"rooms\": data.room,\n      \"persons\": data.numberOfPeople,\n      \"hotelName\": data.hotelName ? data.hotelName : \"\"\n    };\n    setFormValue(JSON.stringify(payload));\n    let response = await getHotels(payload);\n\n    if (response) {\n      if (response.status === 200) {\n        dispatchUserEvent('ADD_HOTEL', {\n          addHotel: response.data\n        });\n        history.push('/hotels');\n      }\n    } else {\n      toast.error(\"Facing some error\");\n    }\n  };\n\n  useEffect(() => {\n    getAllCities();\n    reset({\n      location: selectedValue.location.length > 0 ? selectedValue.location[0].id : '',\n      room: selectedValue.room.length > 0 ? selectedValue.room[0].id : '',\n      checkIn: selectedDate.checkIn ? selectedDate.checkIn : null,\n      checkOut: selectedDate.checkOut ? selectedDate.checkOut : null\n    });\n  }, [selectedValue, selectedDate]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"banner-tabs shadow-sm p-3 mb-5 bg-body rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-content bg-custom-white bx-wrapper padding-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-pane active\",\n    id: \"hotel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3 col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"text\"\n  }, register(\"destinationBudget\"), {\n    className: \"form-control form-control-custom\",\n    placeholder: \"Enter Budget per room\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: errors.destinationBudget && 'log-error',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 57\n    }\n  }, (_errors$destinationBu = errors.destinationBudget) === null || _errors$destinationBu === void 0 ? void 0 : _errors$destinationBu.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3 col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Typeahead, Object.assign({}, register(\"location\"), {\n    id: \"basic-typeahead-single\",\n    labelKey: option => `${option.city}, ${option.state}`,\n    onChange: handleCountry,\n    options: options,\n    placeholder: \"Enter Location\",\n    selected: selectedValue.location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: errors.location && 'log-error',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 57\n    }\n  }, (_errors$location = errors.location) === null || _errors$location === void 0 ? void 0 : _errors$location.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3 col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Typeahead, Object.assign({}, register(\"room\"), {\n    id: \"basic-typeahead-single\",\n    labelKey: \"room\",\n    onChange: data => setSelectedValue({ ...selectedValue,\n      room: data\n    }),\n    options: roomOptions,\n    placeholder: \"Choose Room\",\n    selected: selectedValue.room,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: errors.room && 'log-error',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 57\n    }\n  }, (_errors$room = errors.room) === null || _errors$room === void 0 ? void 0 : _errors$room.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3 col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"text\"\n  }, register(\"numberOfPeople\"), {\n    className: \"form-control form-control-custom\",\n    placeholder: \"Enter No of People\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: errors.numberOfPeople && 'log-error',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 57\n    }\n  }, (_errors$numberOfPeopl = errors.numberOfPeople) === null || _errors$numberOfPeopl === void 0 ? void 0 : _errors$numberOfPeopl.message)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-end my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3 col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"text\"\n  }, register(\"hotelName\"), {\n    className: \"form-control form-control-custom\",\n    placeholder: \"Enter Hotel Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3 col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, Object.assign({}, register(\"checkIn\"), {\n    autoOk: true,\n    fullWidth: true,\n    value: selectedDate.checkIn,\n    placeholder: \"00-00-0000\",\n    onChange: (date, e) => handleDateChange('checkIn', e),\n    minDate: new Date(),\n    format: \"dd-MM-yyyy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 57\n    }\n  })), errors.checkIn && /*#__PURE__*/React.createElement(\"p\", {\n    className: errors.checkIn && 'log-error',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 61\n    }\n  }, (_errors$checkIn = errors.checkIn) === null || _errors$checkIn === void 0 ? void 0 : _errors$checkIn.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3 col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, Object.assign({}, register(\"checkOut\"), {\n    autoOk: true,\n    fullWidth: true,\n    value: selectedDate.checkOut,\n    placeholder: \"00-00-0000\",\n    onChange: (date, e) => handleDateChange('checkOut', e),\n    minDate: new Date(),\n    format: \"dd-MM-yyyy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 57\n    }\n  })), errors.checkOut && /*#__PURE__*/React.createElement(\"p\", {\n    className: errors.checkOut && 'log-error',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 61\n    }\n  }, (_errors$checkOut = errors.checkOut) === null || _errors$checkOut === void 0 ? void 0 : _errors$checkOut.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 57\n    }\n  }, \"Check Availability\")))))))))))));\n};\n\nexport default HotelFormChecking;","map":{"version":3,"sources":["C:/Users/admin/Desktop/Travel/frontend/src/components/hotel-form-checking/hotel-form-checking.js"],"names":["React","useState","useEffect","useContext","Button","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","Typeahead","useForm","yupResolver","yup","getCities","getHotels","useHistory","ContextApi","ToastContainer","toast","HotelFormChecking","dispatchUserEvent","history","schema","object","destinationBudget","number","typeError","min","location","string","required","room","numberOfPeople","checkIn","checkOut","selectedDate","setSelectedDate","register","handleSubmit","formState","errors","reset","resolver","selectedValue","setSelectedValue","options","setOptions","roomOptions","id","getAllCities","response","status","data","handleCountry","handleDateChange","dateCheck","date","console","log","Formvalue","setFormValue","localStorage","getItem","setItem","onSubmit","payload","hotelName","JSON","stringify","addHotel","push","error","length","message","option","city","state","e","Date"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Button } from '@material-ui/core'\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker\n} from '@material-ui/pickers';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport { useForm } from 'react-hook-form';\nimport 'react-bootstrap-typeahead/css/Typeahead.css'\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\nimport { getCities, getHotels } from '../../api-service/api-service';\nimport { useHistory } from 'react-router-dom';\nimport ContextApi from '../../context-api/context-api';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst HotelFormChecking = () => {\n\n    const { dispatchUserEvent } = useContext(ContextApi);\n    const history = useHistory();\n    const schema = yup.object({\n        destinationBudget: yup.number().typeError('Please enter valid budget').min(500, 'Min value 500'),\n        location: yup.string().required('Please select location'),\n        room: yup.string().required('Please select room'),\n        numberOfPeople: yup.number().typeError('Please enter number of people').required(),\n        checkIn: yup.string().typeError('Please select check-in date').required('Please select check-in date'),\n        checkOut: yup.string().typeError('Please select check-out date').required('Please select check-out date')\n    }).required();\n\n    const [selectedDate, setSelectedDate] = useState({\n        checkIn: null,\n        checkOut: null\n    });\n    const { register, handleSubmit, formState: { errors }, reset } = useForm({\n        resolver: yupResolver(schema)\n    });\n    const [selectedValue, setSelectedValue] = useState({\n        location: [],\n        room: []\n    });\n    const [options, setOptions] = useState([]);\n    const roomOptions = [\n        { id: 0, room: 'Family', },\n        { id: 1, room: 'Couples' },\n        { id: 2, room: 'Newly Married Couples' },\n        { id: 3, room: 'Personal' }\n    ];\n\n    // Getting Cities\n    const getAllCities = async () => {\n        let response = await getCities();\n        if (response.status === 200) {\n            setOptions(response.data);\n        } else {\n            setOptions([])\n        }\n    }\n\n    const handleCountry = data => {\n        setSelectedValue({ ...selectedValue, location: data });\n    }\n\n    const handleDateChange = (dateCheck, date) => {\n        console.log(dateCheck, date);\n        if (dateCheck === 'checkIn') {\n            setSelectedDate({ ...selectedDate, checkIn: date });\n        } else {\n            setSelectedDate({ ...selectedDate, checkOut: date });\n        }\n    }\n\n    const [Formvalue, setFormValue] = useState(\n        localStorage.getItem('hotelForm') || ''\n    );\n\n    useEffect(() => {\n        localStorage.setItem('hotelForm', Formvalue);\n    }, [Formvalue]);\n\n    // Submiting Data\n    const onSubmit = async (data) => {\n\n        let payload = {\n            \"city\": data.location,\n            \"budget\": data.destinationBudget,\n            \"checkin\": data.checkIn,\n            \"checkout\": data.checkOut,\n            \"rooms\": data.room,\n            \"persons\": data.numberOfPeople,\n            \"hotelName\": data.hotelName ? data.hotelName : \"\"\n        };\n\n        setFormValue(JSON.stringify(payload));\n        \n        let response = await getHotels(payload);\n\n        if (response) {\n            if (response.status === 200) {\n                dispatchUserEvent('ADD_HOTEL', { addHotel: response.data });\n                history.push('/hotels');\n            }   \n        } else {\n            toast.error(\"Facing some error\");\n        }\n\n    }\n\n    useEffect(() => {\n        getAllCities();\n        reset({\n            location: selectedValue.location.length > 0 ? selectedValue.location[0].id : '',\n            room: selectedValue.room.length > 0 ? selectedValue.room[0].id : '',\n            checkIn: selectedDate.checkIn ? selectedDate.checkIn : null,\n            checkOut: selectedDate.checkOut ? selectedDate.checkOut : null,\n        })\n    }, [selectedValue, selectedDate])\n\n    return (\n        <div className=\"banner-tabs shadow-sm p-3 mb-5 bg-body rounded\">\n            <ToastContainer />\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"tabs\">\n                            <div className=\"tab-content bg-custom-white bx-wrapper padding-20\">\n                                <div className=\"tab-pane active\" id=\"hotel\">\n                                    <div className=\"tab-inner\">\n                                        <form onSubmit={handleSubmit(onSubmit)}>\n                                            <div className=\"row\">\n                                                <div className=\"col-lg-3 col-md-3\">\n                                                    <div className=\"form-group\">\n                                                        <input type=\"text\"\n                                                            {...register(\"destinationBudget\")}\n                                                            className=\"form-control form-control-custom\"\n                                                            placeholder=\"Enter Budget per room\"\n                                                            />\n                                                        <p className={errors.destinationBudget && 'log-error'}>{errors.destinationBudget?.message}</p>\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-lg-3 col-md-3\">\n                                                    <div className='form-group'>\n                                                        <Typeahead\n                                                            {...register(\"location\")}\n                                                            id=\"basic-typeahead-single\"\n                                                            labelKey={option => `${option.city}, ${option.state}`}\n                                                            onChange={handleCountry}\n                                                            options={options}\n                                                            placeholder=\"Enter Location\"\n                                                            selected={selectedValue.location}\n                                                        />\n                                                        <p className={errors.location && 'log-error'}>{errors.location?.message}</p>\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-lg-3 col-md-3\">\n                                                    <div className='form-group'>\n                                                        <Typeahead\n                                                            {...register(\"room\")}\n                                                            id=\"basic-typeahead-single\"\n                                                            labelKey=\"room\"\n                                                            onChange={(data) => setSelectedValue({ ...selectedValue, room: data })}\n                                                            options={roomOptions}\n                                                            placeholder=\"Choose Room\"\n                                                            selected={selectedValue.room}\n                                                        />\n                                                        <p className={errors.room && 'log-error'}>{errors.room?.message}</p>\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-lg-3 col-md-3\">\n                                                    <div className=\"form-group\">\n                                                        <input type=\"text\" {...register(\"numberOfPeople\")}\n                                                            className=\"form-control form-control-custom\"\n                                                            placeholder=\"Enter No of People\" />\n                                                        <p className={errors.numberOfPeople && 'log-error'}>{errors.numberOfPeople?.message}</p>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className='row align-items-end my-2'>\n                                                <div className=\"col-lg-3 col-md-3\">\n                                                    <div className=\"form-group\">\n                                                        <input type=\"text\" {...register(\"hotelName\")}\n                                                            className=\"form-control form-control-custom\"\n                                                            placeholder=\"Enter Hotel Name\"\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                    <div className=\"col-lg-3 col-md-3\">\n                                                        <KeyboardDatePicker\n                                                            {...register(\"checkIn\")}\n                                                            autoOk\n                                                            fullWidth\n                                                            value={selectedDate.checkIn}\n                                                            placeholder=\"00-00-0000\"\n                                                            onChange={(date, e) => handleDateChange('checkIn', e)}\n                                                            minDate={new Date()}\n                                                            format=\"dd-MM-yyyy\"\n                                                        />\n                                                        {\n                                                            errors.checkIn &&\n                                                            <p className={errors.checkIn && 'log-error'}>{errors.checkIn?.message}</p>\n                                                        }\n\n                                                    </div>\n                                                    <div className=\"col-lg-3 col-md-3\">\n                                                        <KeyboardDatePicker\n                                                            {...register(\"checkOut\")}\n                                                            autoOk\n                                                            fullWidth\n                                                            value={selectedDate.checkOut}\n                                                            placeholder=\"00-00-0000\"\n                                                            onChange={(date, e) => handleDateChange('checkOut', e)}\n                                                            minDate={new Date()}\n                                                            format=\"dd-MM-yyyy\"\n                                                        />\n                                                        {\n                                                            errors.checkOut &&\n                                                            <p className={errors.checkOut && 'log-error'}>{errors.checkOut?.message}</p>\n                                                        }\n                                                    </div>\n                                                </MuiPickersUtilsProvider>\n                                                <div className='col-md-3'>\n                                                    <div className='d-flex justify-content-end'>\n                                                        <Button type='submit' variant=\"contained\" color='primary' size='small' disableElevation>\n                                                            Check Availability\n                                                        </Button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HotelFormChecking"]},"metadata":{},"sourceType":"module"}