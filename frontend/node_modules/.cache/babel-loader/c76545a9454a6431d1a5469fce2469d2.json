{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\letsTravel\\\\frontend\\\\src\\\\components\\\\room-booking\\\\room-booking.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport ContextApi from '../../context-api/context-api'; // import { useHistory } from 'react-router-dom';\n\nimport { useNavigate } from 'react-router-dom';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { Form, Card, Button, Row, Col, Container, Stack } from 'react-bootstrap';\nimport Hotel1 from '../../images/hotel1.jpg';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\nimport { useForm } from 'react-hook-form';\nimport { BookHotel } from '../../api-service/api-service';\n\nconst RoomBooking = () => {\n  var _userDetails, _userDetails2, _getHotelForm, _getHotelForm2, _getHotelForm3, _getHotelForm4, _getHotelData, _errors$rooms, _errors$person, _errors$checkIn, _errors$checkOut, _errors$roomNeeded;\n\n  const [validated, setValidated] = useState(false);\n  const {\n    dispatchUserEvent\n  } = useContext(ContextApi);\n  const history = useHistory();\n  let userDetails = localStorage.getItem('user_data');\n  let getHotelData = localStorage.getItem('HotelSelected');\n  let getHotelForm = localStorage.getItem('hotelForm');\n  userDetails = JSON.parse(userDetails);\n  getHotelForm = JSON.parse(getHotelForm);\n  getHotelData = JSON.parse(getHotelData);\n  let fromDate;\n  let toDate;\n  const schema = yup.object({\n    rooms: yup.string().required('Please select room'),\n    person: yup.number().typeError('Please enter number of people').required(),\n    checkIn: yup.string().typeError('Please select check-in date').required('Please select check-in date'),\n    checkOut: yup.string().typeError('Please select check-out date').required('Please select check-out date'),\n    terms: yup.bool().required().oneOf([true], 'Terms must be accepted'),\n    roomNeeded: yup.string().required('Please enter No. of room needed as required')\n  }).required();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const [bkData, setBkData] = useState({\n    fname: (_userDetails = userDetails) === null || _userDetails === void 0 ? void 0 : _userDetails.full_name,\n    email: (_userDetails2 = userDetails) === null || _userDetails2 === void 0 ? void 0 : _userDetails2.email,\n    rooms: (_getHotelForm = getHotelForm) === null || _getHotelForm === void 0 ? void 0 : _getHotelForm.rooms,\n    person: (_getHotelForm2 = getHotelForm) === null || _getHotelForm2 === void 0 ? void 0 : _getHotelForm2.persons,\n    checkIn: (_getHotelForm3 = getHotelForm) === null || _getHotelForm3 === void 0 ? void 0 : _getHotelForm3.checkin,\n    checkOut: (_getHotelForm4 = getHotelForm) === null || _getHotelForm4 === void 0 ? void 0 : _getHotelForm4.checkout,\n    roomNeeded: '',\n    terms: false,\n    totalPrice: (_getHotelData = getHotelData) === null || _getHotelData === void 0 ? void 0 : _getHotelData.rent\n  });\n  const roomOptions = [{\n    id: 0,\n    room: 'Family'\n  }, {\n    id: 1,\n    room: 'Couples'\n  }, {\n    id: 2,\n    room: 'Newly Married Couples'\n  }, {\n    id: 3,\n    room: 'Personal'\n  }];\n\n  if (getHotelForm) {\n    fromDate = getHotelForm.checkin.split('-');\n    fromDate = fromDate[1] + \"-\" + fromDate[0] + \"-\" + fromDate[2];\n    toDate = getHotelForm.checkout.split('-');\n    toDate = toDate[1] + \"-\" + toDate[0] + \"-\" + toDate[2];\n  } // Handle Change\n\n\n  const handleDateChange = (dateCheck, date) => {\n    console.log(dateCheck, date);\n\n    if (dateCheck === 'checkIn') {\n      setBkData({ ...bkData,\n        checkIn: date\n      });\n    } else {\n      setBkData({ ...bkData,\n        checkOut: date\n      });\n    }\n  }; //handle room change\n\n\n  const handleRoomChange = e => {\n    setBkData({ ...bkData,\n      totalPrice: parseInt(getHotelData.rent) * e.target.value,\n      roomNeeded: e.target.value\n    });\n  }; // Submit Data\n\n\n  const onSubmit = async data => {\n    console.log('data', data);\n\n    if (bkData.terms) {\n      let BookingData = {\n        hotel_id: getHotelData.hotel_id,\n        rooms: bkData.roomNeeded,\n        persons: bkData.person,\n        checkin: bkData.checkIn,\n        checkout: bkData.checkOut,\n        totalPrice: bkData.totalPrice\n      };\n      let response = await BookHotel(BookingData);\n\n      if (response.status === 200) {\n        history.push('/invoice');\n        dispatchUserEvent('BOOKING', {\n          subTotal: bkData.totalPrice\n        });\n      } else {\n        history.push('/');\n      }\n    } else {}\n  };\n\n  useEffect(() => {\n    if (bkData.fname && bkData.email) {\n      reset({\n        fname: bkData.fname,\n        email: bkData.email,\n        rooms: bkData.rooms,\n        person: bkData.person,\n        checkIn: bkData.checkIn,\n        checkOut: bkData.checkOut,\n        roomNeeded: bkData.roomNeeded,\n        terms: bkData.terms,\n        totalPrice: bkData.totalPrice\n      });\n    }\n  }, [bkData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"banner-tabs shadow-sm p-3 mb-5 bg-body rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, userDetails ? getHotelData ? /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  }, \"Booking Summary \")), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Card.Img, {\n    variant: \"top\",\n    src: Hotel1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 49\n    }\n  }, getHotelData.hotel_name), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 53\n    }\n  }, \"\\u20B9 \", getHotelData.rent, \" /- per room\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 111\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 53\n    }\n  }), /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 53\n    }\n  }, \"Address : \"), \"\\xA0 \", getHotelData.address, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 100\n    }\n  }), getHotelData.city, \", \", getHotelData.state)))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    direction: \"horizontal\",\n    gap: 3,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 49\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, Object.assign({}, register(\"fname\"), {\n    type: \"text\",\n    defaultValue: \"Mark\",\n    isValid: bkData.fname && !errors.fname,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 49\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 49\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, Object.assign({}, register(\"email\"), {\n    type: \"email\",\n    defaultValue: \"Mark\",\n    isValid: bkData.email && !errors.email,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 49\n    }\n  })))), /*#__PURE__*/React.createElement(Stack, {\n    direction: \"horizontal\",\n    gap: 3,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 49\n    }\n  }, \"Choose Room\"), /*#__PURE__*/React.createElement(Form.Select, Object.assign({\n    \"aria-label\": \"\"\n  }, register(\"rooms\"), {\n    onChange: e => setBkData({ ...bkData,\n      rooms: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 53\n    }\n  }, \"Select room type\"), roomOptions.map(room => {\n    if (room.id === parseInt(bkData.rooms)) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: room.id,\n        value: room.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 65\n        }\n      }, room.room);\n    } else {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: room.id,\n        value: room.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 65\n        }\n      }, room.room);\n    }\n  })), errors.rooms && /*#__PURE__*/React.createElement(\"p\", {\n    className: errors.rooms && 'log-error',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 53\n    }\n  }, (_errors$rooms = errors.rooms) === null || _errors$rooms === void 0 ? void 0 : _errors$rooms.message)), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 49\n    }\n  }, \"Guests\"), /*#__PURE__*/React.createElement(Form.Control, Object.assign({}, register(\"person\"), {\n    isInvalid: bkData.person && !!errors.person,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 49\n    }\n  })), errors.person && /*#__PURE__*/React.createElement(\"p\", {\n    className: errors.person && 'log-error',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 53\n    }\n  }, (_errors$person = errors.person) === null || _errors$person === void 0 ? void 0 : _errors$person.message))), /*#__PURE__*/React.createElement(Stack, {\n    direction: \"horizontal\",\n    gap: 3,\n    className: \"my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, Object.assign({}, register(\"checkIn\"), {\n    autoOk: true,\n    fullWidth: true,\n    value: bkData.checkIn,\n    placeholder: \"00-00-0000\",\n    onChange: (date, e) => handleDateChange('checkIn', e),\n    minDate: new Date(),\n    format: \"MM-dd-yyyy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 53\n    }\n  })), errors.checkIn && /*#__PURE__*/React.createElement(\"p\", {\n    className: errors.checkIn && 'log-error',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 57\n    }\n  }, (_errors$checkIn = errors.checkIn) === null || _errors$checkIn === void 0 ? void 0 : _errors$checkIn.message)), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, Object.assign({}, register(\"checkOut\"), {\n    autoOk: true,\n    fullWidth: true,\n    value: bkData.checkOut,\n    placeholder: \"00-00-0000\",\n    onChange: (date, e) => handleDateChange('checkOut', e),\n    minDate: new Date(),\n    format: \"MM-dd-yyyy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 53\n    }\n  })), errors.checkOut && /*#__PURE__*/React.createElement(\"p\", {\n    className: errors.checkOut && 'log-error',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 57\n    }\n  }, (_errors$checkOut = errors.checkOut) === null || _errors$checkOut === void 0 ? void 0 : _errors$checkOut.message)))), /*#__PURE__*/React.createElement(Stack, {\n    direction: \"horizontal\",\n    gap: 3,\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 49\n    }\n  }, \"No. of Rooms\"), /*#__PURE__*/React.createElement(Form.Control, Object.assign({}, register(\"roomNeeded\"), {\n    isInvalid: bkData.roomNeeded && !!errors.roomNeeded,\n    type: \"text\",\n    onChange: e => handleRoomChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 49\n    }\n  })), errors.roomNeeded && /*#__PURE__*/React.createElement(\"p\", {\n    className: errors.roomNeeded && 'log-error',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 53\n    }\n  }, (_errors$roomNeeded = errors.roomNeeded) === null || _errors$roomNeeded === void 0 ? void 0 : _errors$roomNeeded.message))), /*#__PURE__*/React.createElement(Stack, {\n    direction: \"horizontal\",\n    gap: 3,\n    className: \"my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fw-bolder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 45\n    }\n  }, \"Total Price\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fw-bolder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 45\n    }\n  }, \"\\u20B9 \", bkData.totalPrice, \" /-\", /*#__PURE__*/React.createElement(Form.Control, Object.assign({}, register(\"totalPrice\"), {\n    type: \"hidden\",\n    defaultValue: bkData.totalPrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 49\n    }\n  })), ' ', \"per day.\")), /*#__PURE__*/React.createElement(Stack, {\n    gap: 2,\n    className: \"mx-auto mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    id: \"formGridCheckbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, Object.assign({}, register(\"terms\"), {\n    label: \"Agree to terms and conditions\",\n    onChange: e => setBkData({ ...bkData,\n      terms: true\n    }),\n    isInvalid: !bkData.terms && !!errors.terms,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 49\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    className: \"bg-success\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 41\n    }\n  }, \"Submit\"))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 29\n    }\n  }, \"Please Select Hotel Again in order to Proceed\")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 25\n    }\n  }, \"Error \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 25\n    }\n  }, \"Please login/SignUp to book a room\")));\n};\n\nexport default RoomBooking;","map":{"version":3,"sources":["C:/Users/admin/Desktop/letsTravel/frontend/src/components/room-booking/room-booking.js"],"names":["React","useState","useContext","useEffect","ContextApi","useNavigate","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","Form","Card","Button","Row","Col","Container","Stack","Hotel1","yupResolver","yup","useForm","BookHotel","RoomBooking","validated","setValidated","dispatchUserEvent","history","useHistory","userDetails","localStorage","getItem","getHotelData","getHotelForm","JSON","parse","fromDate","toDate","schema","object","rooms","string","required","person","number","typeError","checkIn","checkOut","terms","bool","oneOf","roomNeeded","register","handleSubmit","formState","errors","reset","resolver","bkData","setBkData","fname","full_name","email","persons","checkin","checkout","totalPrice","rent","roomOptions","id","room","split","handleDateChange","dateCheck","date","console","log","handleRoomChange","e","parseInt","target","value","onSubmit","data","BookingData","hotel_id","response","status","push","subTotal","hotel_name","address","city","state","map","message","Date"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport ContextApi from '../../context-api/context-api';\n// import { useHistory } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker\n} from '@material-ui/pickers';\nimport {\n    Form, Card, Button, Row,\n    Col, Container, Stack\n} from 'react-bootstrap';\nimport Hotel1 from '../../images/hotel1.jpg';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\nimport { useForm } from 'react-hook-form';\nimport { BookHotel } from '../../api-service/api-service';\n\n\nconst RoomBooking = () => {\n    const [validated, setValidated] = useState(false);\n    const { dispatchUserEvent } = useContext(ContextApi);\n    const history = useHistory();\n    let userDetails = localStorage.getItem('user_data');\n    let getHotelData = localStorage.getItem('HotelSelected');\n    let getHotelForm = localStorage.getItem('hotelForm');\n    userDetails = JSON.parse(userDetails);\n    getHotelForm = JSON.parse(getHotelForm);\n    getHotelData = JSON.parse(getHotelData);\n    let fromDate;\n    let toDate;\n    const schema = yup.object({\n        rooms: yup.string().required('Please select room'),\n        person: yup.number().typeError('Please enter number of people').required(),\n        checkIn: yup.string().typeError('Please select check-in date').required('Please select check-in date'),\n        checkOut: yup.string().typeError('Please select check-out date').required('Please select check-out date'),\n        terms: yup.bool().required().oneOf([true], 'Terms must be accepted'),\n        roomNeeded: yup.string().required('Please enter No. of room needed as required')\n    }).required();\n    const { register, handleSubmit, formState: { errors }, reset } = useForm({\n        resolver: yupResolver(schema)\n    });\n    const [bkData, setBkData] = useState({\n        fname: userDetails?.full_name,\n        email: userDetails?.email,\n        rooms: getHotelForm?.rooms,\n        person: getHotelForm?.persons,\n        checkIn: getHotelForm?.checkin,\n        checkOut: getHotelForm?.checkout,\n        roomNeeded: '',\n        terms: false,\n        totalPrice: getHotelData?.rent,\n    });\n    const roomOptions = [\n        { id: 0, room: 'Family', },\n        { id: 1, room: 'Couples' },\n        { id: 2, room: 'Newly Married Couples' },\n        { id: 3, room: 'Personal' }\n    ];\n    \n    if (getHotelForm) {\n        fromDate = getHotelForm.checkin.split('-');\n        fromDate = fromDate[1] + \"-\" + fromDate[0] + \"-\" + fromDate[2];\n        toDate = getHotelForm.checkout.split('-');\n        toDate = toDate[1] + \"-\" + toDate[0] + \"-\" + toDate[2];\n    }\n\n    // Handle Change\n    const handleDateChange = (dateCheck, date) => {\n        console.log(dateCheck, date);\n        if (dateCheck === 'checkIn') {\n            setBkData({ ...bkData, checkIn: date });\n        } else {\n            setBkData({ ...bkData, checkOut: date });\n        }\n    }\n\n    //handle room change\n    const handleRoomChange = (e) => {\n        setBkData({\n            ...bkData,\n            totalPrice: parseInt(getHotelData.rent) * e.target.value,\n            roomNeeded: e.target.value\n        });\n    }\n\n    // Submit Data\n    const onSubmit = async (data) => {\n        console.log('data', data);\n        if (bkData.terms) {\n            \n            let BookingData = {\n                hotel_id: getHotelData.hotel_id,\n                rooms: bkData.roomNeeded,\n                persons: bkData.person,\n                checkin: bkData.checkIn,\n                checkout: bkData.checkOut,\n                totalPrice: bkData.totalPrice,\n            }\n\n            let response = await BookHotel(BookingData);\n            if (response.status === 200) {\n                history.push('/invoice');\n                dispatchUserEvent('BOOKING', { subTotal: bkData.totalPrice });\n            } else {\n                history.push('/');\n            }\n        } else {\n\n        }\n    }\n\n    useEffect(() => {\n        if (bkData.fname && bkData.email) {\n            reset({\n                fname: bkData.fname,\n                email: bkData.email,\n                rooms: bkData.rooms,\n                person: bkData.person,\n                checkIn: bkData.checkIn,\n                checkOut: bkData.checkOut,\n                roomNeeded: bkData.roomNeeded,\n                terms: bkData.terms,\n                totalPrice: bkData.totalPrice,\n\n            })\n        }\n    }, [bkData])\n\n    return (\n        <div className=\"banner-tabs shadow-sm p-3 mb-5 bg-body rounded\">\n            {\n                userDetails ?\n                    (getHotelData ?\n                        <Form noValidate validated={validated} onSubmit={handleSubmit(onSubmit)}>\n                            <div className=\"col-12 mb-3\">\n                                <h3>Booking Summary </h3>\n                            </div>\n                            <Container>\n                                <Row className=\"mb-12\">\n                                    <Col>\n                                        <Card className=\"card1\">\n                                            <Card.Img variant=\"top\" src={Hotel1} />\n                                            <Card.Body>\n                                                <Card.Title>{getHotelData.hotel_name}</Card.Title>\n                                                <Card.Text>\n                                                    <b className='mb-3'>₹ {getHotelData.rent} /- per room</b> <br></br>\n                                                    <br></br>\n                                                    <b>Address : </b>&nbsp; {getHotelData.address} <br></br>\n                                                    {getHotelData.city}, {getHotelData.state}\n                                                </Card.Text>\n                                                {/* <Button variant=\"primary\">Go to Hotel </Button> */}\n                                            </Card.Body>\n                                        </Card>\n                                    </Col>\n                                    <Col>\n                                        <Stack direction=\"horizontal\" gap={3} className=\"mb-3\">\n                                            <Form.Group as={Col} controlId=\"formGridEmail\" >\n                                                <Form.Label>Name</Form.Label>\n                                                <Form.Control\n                                                    {...register(\"fname\")}\n                                                    type=\"text\"\n                                                    defaultValue=\"Mark\"\n                                                    isValid={bkData.fname && !errors.fname}\n                                                    disabled />\n                                            </Form.Group>\n                                            <Form.Group as={Col}>\n                                                <Form.Label>Email</Form.Label>\n                                                <Form.Control\n                                                    {...register(\"email\")}\n                                                    type=\"email\"\n                                                    defaultValue=\"Mark\"\n                                                    isValid={bkData.email && !errors.email}\n                                                    disabled\n                                                />\n                                            </Form.Group>\n                                        </Stack>\n                                        <Stack direction=\"horizontal\" gap={3} className=\"mb-3\">\n                                            <Form.Group as={Col} >\n                                                <Form.Label>Choose Room</Form.Label>\n                                                <Form.Select aria-label=\"\"\n                                                    {...register(\"rooms\")}\n                                                    onChange={(e) => setBkData({ ...bkData, rooms: e.target.value })}\n                                                >\n                                                    <option value=\"\">Select room type</option>\n                                                    {roomOptions.map((room) => {\n                                                        if (room.id === parseInt(bkData.rooms)) {\n                                                            return (\n                                                                <option key={room.id} value={room.id} >{room.room}</option>\n                                                            )\n                                                        } else {\n                                                            return (\n                                                                <option key={room.id} value={room.id} >{room.room}</option>\n                                                            )\n                                                        }\n                                                    })\n                                                    }\n                                                </Form.Select>\n                                                {\n                                                    errors.rooms &&\n                                                    <p className={errors.rooms && 'log-error'}>{errors.rooms?.message}</p>\n                                                }\n                                            </Form.Group>\n                                            <Form.Group as={Col}>\n                                                <Form.Label>Guests</Form.Label>\n                                                <Form.Control\n                                                    {...register(\"person\")}\n                                                    isInvalid={bkData.person && !!errors.person}\n                                                    type=\"text\"\n                                                />\n                                                {\n                                                    errors.person &&\n                                                    <p className={errors.person && 'log-error'}>{errors.person?.message}</p>\n                                                }\n                                            </Form.Group>\n                                        </Stack>\n                                        <Stack direction=\"horizontal\" gap={3} className=\"my-4\">\n                                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                <Form.Group as={Col} >\n                                                    <KeyboardDatePicker\n                                                        {...register(\"checkIn\")}\n                                                        autoOk\n                                                        fullWidth\n                                                        value={bkData.checkIn}\n                                                        placeholder=\"00-00-0000\"\n                                                        onChange={(date, e) => handleDateChange('checkIn', e)}\n                                                        minDate={new Date()}\n                                                        format=\"MM-dd-yyyy\"\n                                                    />\n                                                    {\n                                                        errors.checkIn &&\n                                                        <p className={errors.checkIn && 'log-error'}>{errors.checkIn?.message}</p>\n                                                    }\n                                                </Form.Group>\n                                                <Form.Group as={Col} controlId=\"formGridEmail\" >\n                                                    <KeyboardDatePicker\n                                                        {...register(\"checkOut\")}\n                                                        autoOk\n                                                        fullWidth\n                                                        value={bkData.checkOut}\n                                                        placeholder=\"00-00-0000\"\n                                                        onChange={(date, e) => handleDateChange('checkOut', e)}\n                                                        minDate={new Date()}\n                                                        format=\"MM-dd-yyyy\"\n                                                    />\n                                                    {\n                                                        errors.checkOut &&\n                                                        <p className={errors.checkOut && 'log-error'}>{errors.checkOut?.message}</p>\n                                                    }\n                                                </Form.Group>\n                                            </MuiPickersUtilsProvider>\n                                        </Stack>\n                                        <Stack direction=\"horizontal\" gap={3} className=\"col-md-6\">\n                                            <Form.Group as={Col}>\n                                                <Form.Label>No. of Rooms</Form.Label>\n                                                <Form.Control\n                                                    {...register(\"roomNeeded\")}\n                                                    isInvalid={bkData.roomNeeded && !!errors.roomNeeded}\n                                                    type=\"text\"\n                                                    onChange={(e) => handleRoomChange(e)}\n                                                />\n                                                {\n                                                    errors.roomNeeded &&\n                                                    <p className={errors.roomNeeded && 'log-error'}>{errors.roomNeeded?.message}</p>\n                                                }\n                                            </Form.Group>\n                                        </Stack>\n                                        <Stack direction=\"horizontal\" gap={3} className=\"my-4\">\n                                            <div className='fw-bolder'>\n                                                Total Price\n                                            </div>\n                                            <div className=\"fw-bolder\">\n                                                ₹ {bkData.totalPrice} /-\n                                                <Form.Control\n                                                    {...register(\"totalPrice\")}\n                                                    type=\"hidden\"\n                                                    defaultValue={bkData.totalPrice}\n                                                >\n                                                </Form.Control>\n                                                {' '}per day.\n                                            </div>\n                                        </Stack>\n                                        <Stack gap={2} className=\"mx-auto mb-3\">\n                                            <Form.Group className=\"mb-3\" id=\"formGridCheckbox\">\n                                                <Form.Check\n                                                    {...register(\"terms\")}\n                                                    label=\"Agree to terms and conditions\"\n                                                    onChange={(e) => setBkData({ ...bkData, terms: true })}\n                                                    isInvalid={!bkData.terms && !!errors.terms}\n                                                />\n                                            </Form.Group>\n                                        </Stack>\n                                        <Button variant=\"primary\" className=\"bg-success\" type=\"submit\">\n                                            Submit\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </Container>\n                        </Form> :\n                        <div className=\"col-12 mb-3\">\n                            <h3>Please Select Hotel Again in order to Proceed</h3>\n                        </div>\n                    )\n                    : <div className=\"col-12 mb-3\">\n                        <h3>Error </h3>\n                        <p>Please login/SignUp to book a room</p>\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default RoomBooking;"]},"metadata":{},"sourceType":"module"}